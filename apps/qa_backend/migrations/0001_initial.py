# Generated by Django 3.1.3 on 2020-11-29 03:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('api_name', models.CharField(max_length=32, verbose_name='接口名称')),
                ('content_type', models.CharField(choices=[('text/html', 'text/html'), ('text/plain', 'text/plain'), ('text/xml', 'text/xml'), ('application/x-www-form-urlencoded', 'application/x-www-form-urlencoded'), ('application/json', 'application/json'), ('application/xml', 'application/xml'), ('application/msword', 'application/msword'), ('application/pdf', 'application/pdf'), ('image/gif', 'image/gif'), ('image/jpeg', 'image/jpeg'), ('image/png', 'image/png')], max_length=128, verbose_name='Content-type')),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=255, verbose_name='请求方式')),
                ('path', models.CharField(max_length=128, verbose_name='资源路径')),
            ],
            options={
                'verbose_name': '接口配置',
                'verbose_name_plural': '接口配置',
                'db_table': 'tb_api',
            },
        ),
        migrations.CreateModel(
            name='ApiCaseData',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '接口数据',
                'verbose_name_plural': '接口数据',
                'db_table': 'tb_api_case_data',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('switch', models.CharField(max_length=16, null=True, verbose_name='业务字段（0为需要执行，1不需要处理）')),
                ('context', models.TextField(default='{}', verbose_name='事件数据')),
                ('current_times', models.IntegerField(default=0, verbose_name='最大执行次数')),
                ('max_times', models.IntegerField(default=3, verbose_name='最大执行次数')),
                ('err_record', models.TextField(blank=True, null=True, verbose_name='报错记录')),
            ],
            options={
                'verbose_name': '事件表',
                'verbose_name_plural': '事件表',
                'db_table': 'tb_event',
            },
        ),
        migrations.CreateModel(
            name='EventApiResult',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('host', models.CharField(max_length=64, null=True, verbose_name='Host')),
                ('current_status', models.CharField(choices=[('等待', '等待'), ('运行', '运行'), ('完成', '完成'), ('失败', '失败')], max_length=8, verbose_name='接口测试结果')),
                ('total', models.IntegerField(blank=True, null=True, verbose_name='执行总数')),
                ('time_taken', models.CharField(blank=True, max_length=16, null=True, verbose_name='执行使用时间')),
                ('is_prepared', models.BooleanField(default=False, verbose_name='准备状态')),
                ('err_record', models.TextField(blank=True, null=True, verbose_name='报错记录')),
            ],
            options={
                'verbose_name': '接口事件结果',
                'verbose_name_plural': '接口事件结果',
                'db_table': 'tb_event_api_result',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('project_name', models.CharField(max_length=64, verbose_name='项目名')),
                ('project_leader', models.CharField(max_length=64, verbose_name='负责人')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
                'db_table': 'tb_project',
            },
        ),
        migrations.CreateModel(
            name='QaPlan',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('plan_name', models.CharField(max_length=32, verbose_name='测试计划')),
                ('project', models.ForeignKey(blank=True, db_column='project_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.project', verbose_name='项目')),
            ],
            options={
                'verbose_name': '测试计划',
                'verbose_name_plural': '测试计划',
                'db_table': 'tb_qa_plan',
            },
        ),
        migrations.CreateModel(
            name='QaCase',
            fields=[
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_name', models.CharField(max_length=32, verbose_name='用例名称')),
                ('sort', models.IntegerField(default=0, verbose_name='排序')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('plan', models.ForeignKey(db_column='plan_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.qaplan', verbose_name='测试计划')),
            ],
            options={
                'verbose_name': '测试用例',
                'verbose_name_plural': '测试用例',
                'db_table': 'tb_qa_case',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('nickname', models.CharField(max_length=32, verbose_name='域名昵称')),
                ('host', models.CharField(max_length=64, verbose_name='Host域名')),
                ('project', models.ForeignKey(blank=True, db_column='project_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.project', verbose_name='项目')),
            ],
            options={
                'verbose_name': 'HOST配置',
                'verbose_name_plural': 'HOST配置',
                'db_table': 'tb_host',
            },
        ),
        migrations.CreateModel(
            name='EventApiRecord',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('api_name', models.CharField(max_length=32, null=True, verbose_name='接口名称')),
                ('url', models.CharField(max_length=128, null=True, verbose_name='请求地址')),
                ('headers', models.TextField(default='{}', verbose_name='请求头')),
                ('query', models.TextField(default='{}', verbose_name='请求行入参')),
                ('body', models.TextField(default='{}', verbose_name='请求体入参')),
                ('response', models.TextField(blank=True, null=True, verbose_name='响应参数')),
                ('err_record', models.TextField(blank=True, null=True, verbose_name='报错记录')),
                ('fail_times', models.IntegerField(null=True, verbose_name='请求失败次数')),
                ('is_mock', models.BooleanField(default=False, verbose_name='是否mock')),
                ('sort', models.IntegerField(default=0, verbose_name='用例排序顺序')),
                ('case', models.ForeignKey(db_column='case_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.qacase', verbose_name='测试用例')),
                ('data', models.ForeignKey(db_column='data_id', db_constraint=False, default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.apicasedata', verbose_name='接口数据')),
                ('result', models.ForeignKey(db_column='result_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='qa_backend.eventapiresult', verbose_name='接口事件结果')),
            ],
            options={
                'verbose_name': '接口事件细节记录',
                'verbose_name_plural': '接口事件细节记录',
                'db_table': 'tb_event_api_record',
            },
        ),
        migrations.CreateModel(
            name='ApiCaseModel',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('headers', models.TextField(default='{}', verbose_name='请求头')),
                ('query', models.TextField(default='{}', verbose_name='查询字符串')),
                ('body', models.TextField(default='{}', verbose_name='请求体')),
                ('is_mock', models.BooleanField(default=False, verbose_name='是否mock')),
                ('mock_response', models.TextField(default='{}', verbose_name='mock响应')),
                ('is_expression', models.BooleanField(default=False, verbose_name='是否使用参数化')),
                ('reconnection_times', models.IntegerField(default=3, verbose_name='重连次数')),
                ('timeout', models.IntegerField(default=10, verbose_name='最长等待时长')),
                ('sort', models.IntegerField(default=0, verbose_name='模型排序顺序')),
                ('api', models.ForeignKey(db_column='api_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.api', verbose_name='接口')),
                ('case', models.ForeignKey(db_column='case_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.qacase', verbose_name='测试用例')),
            ],
            options={
                'verbose_name': '接口模型',
                'verbose_name_plural': '接口模型',
                'db_table': 'tb_api_case_model',
            },
        ),
        migrations.CreateModel(
            name='ApiCaseDataNode',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('headers', models.TextField(default='{}', verbose_name='请求头')),
                ('query', models.TextField(default='{}', verbose_name='查询字符串')),
                ('body', models.TextField(default='{}', verbose_name='请求体')),
                ('is_mock', models.BooleanField(default=False, verbose_name='是否mock')),
                ('mock_response', models.TextField(default='{}', verbose_name='mock响应')),
                ('is_expression', models.BooleanField(default=False, verbose_name='是否使用参数化')),
                ('data', models.ForeignKey(db_column='data_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.apicasedata', verbose_name='接口数据')),
                ('model', models.ForeignKey(db_column='model_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.apicasemodel', verbose_name='接口模型')),
            ],
            options={
                'verbose_name': '接口数据节点',
                'verbose_name_plural': '接口数据节点',
                'db_table': 'tb_api_case_data_node',
            },
        ),
        migrations.AddField(
            model_name='apicasedata',
            name='case',
            field=models.ForeignKey(db_column='case_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.qacase', verbose_name='测试用例'),
        ),
        migrations.CreateModel(
            name='ApiAssert',
            fields=[
                ('text', models.CharField(blank=True, db_column='text', default='', max_length=64, verbose_name='描述')),
                ('is_status', models.BooleanField(db_column='is_status', default=True, verbose_name='启用状态')),
                ('is_delete', models.BooleanField(db_column='is_delete', default=False, verbose_name='逻辑删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='create_time', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('assert_method', models.CharField(choices=[('assertEqual', 'assertEqual'), ('assertNotEqual', 'assertNotEqual'), ('assertIn', 'assertIn'), ('assertNotIn', 'assertNotIn')], max_length=16, verbose_name='断言')),
                ('assert_obj', models.CharField(max_length=64, verbose_name='断言对象表达式')),
                ('assert_val', models.TextField(verbose_name='断言值')),
                ('data', models.ForeignKey(db_column='data_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.apicasedata', verbose_name='接口数据')),
                ('model', models.ForeignKey(db_column='model_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.apicasemodel', verbose_name='接口模型')),
            ],
            options={
                'verbose_name': '接口断言',
                'verbose_name_plural': '接口断言',
                'db_table': 'tb_api_assert',
            },
        ),
        migrations.AddField(
            model_name='api',
            name='project',
            field=models.ForeignKey(blank=True, db_column='project_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='qa_backend.project', verbose_name='项目'),
        ),
    ]
