# Generated by Django 3.0.6 on 2020-09-10 14:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('project_id', models.IntegerField(blank=True, null=True, verbose_name='所属项目id')),
                ('api_name', models.CharField(max_length=32, verbose_name='接口名称')),
                ('content_type', models.CharField(choices=[('text/html', 'text/html'), ('text/plain', 'text/plain'), ('text/xml', 'text/xml'), ('application/x-www-form-urlencoded', 'application/x-www-form-urlencoded'), ('application/json', 'application/json'), ('application/xml', 'application/xml'), ('application/msword', 'application/msword'), ('application/pdf', 'application/pdf'), ('image/gif', 'image/gif'), ('image/jpeg', 'image/jpeg'), ('image/png', 'image/png')], max_length=128, verbose_name='http报文body序列化类型content_type')),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=255, verbose_name='请求方式')),
                ('path', models.CharField(max_length=128, verbose_name='资源路径')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='描述')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '接口',
                'verbose_name_plural': '接口',
                'db_table': 'tb_api',
            },
        ),
        migrations.CreateModel(
            name='ApiAssert',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_model_id', models.IntegerField(verbose_name='所属的case_model')),
                ('assert_object', models.CharField(max_length=64, verbose_name='检查对象，jsonpath表达式')),
                ('assert_method', models.CharField(choices=[('assertEqual', 'assertEqual'), ('assertNotEqual', 'assertNotEqual'), ('assertIn', 'assertIn'), ('assertNotIn', 'assertNotIn')], max_length=16, verbose_name='校验方法')),
                ('assert_value', models.TextField(verbose_name='校验的比对值')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='用例描述')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '断言',
                'verbose_name_plural': '断言',
                'db_table': 'tb_api_assert',
            },
        ),
        migrations.CreateModel(
            name='ApiCaseData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_id', models.IntegerField(verbose_name='所属用例id')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='用例描述')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用例参数',
                'verbose_name_plural': '用例参数',
                'db_table': 'tb_api_case_data',
            },
        ),
        migrations.CreateModel(
            name='ApiCaseDataNode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data_id', models.IntegerField(default=1, verbose_name='所属数据id')),
                ('model_id', models.IntegerField(verbose_name='所属用例模型id')),
                ('headers', models.TextField(default='{}', verbose_name='请求头')),
                ('params', models.TextField(default='{}', verbose_name='请求行入参')),
                ('body', models.TextField(default='{}', verbose_name='请求体入参')),
                ('is_mock', models.BooleanField(default=False, verbose_name='mock状态（0 不启用mock，1启用mock）')),
                ('mock_response', models.TextField(default='{}', verbose_name='mock的返回值')),
                ('is_expression', models.BooleanField(default=False, verbose_name='表达式状态（0 不启用jsonpath捕捉参数化，1 启用jsonpath捕捉参数化）')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='用例描述')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用例参数',
                'verbose_name_plural': '用例参数',
                'db_table': 'tb_api_case_data_node',
            },
        ),
        migrations.CreateModel(
            name='ApiCaseModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_id', models.IntegerField(verbose_name='所属用例id')),
                ('api_id', models.IntegerField(verbose_name='关联的接口id')),
                ('reconnection_times', models.IntegerField(default=3, verbose_name='重连次数')),
                ('timeout', models.IntegerField(default=10, verbose_name='最长等待时长')),
                ('headers', models.TextField(default='{}', verbose_name='请求头')),
                ('query', models.TextField(default='{}', verbose_name='请求头入参')),
                ('body', models.TextField(default='{}', verbose_name='请求体入参')),
                ('is_mock', models.BooleanField(default=False, verbose_name='mock状态（0 不启用mock，1启用mock）')),
                ('mock_response', models.TextField(default='{}', verbose_name='mock的返回值')),
                ('is_expression', models.BooleanField(default=False, verbose_name='表达式状态（0 不启用jsonpath捕捉参数化，1 启用jsonpath捕捉参数化）')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='用例描述')),
                ('sort', models.IntegerField(default=0, verbose_name='用例排序顺序')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用例模型',
                'verbose_name_plural': '用例模型',
                'db_table': 'tb_api_case_model',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('switch', models.CharField(max_length=16, null=True, verbose_name='业务字段（0为需要执行，1不需要处理）')),
                ('context', models.TextField(default='{}', verbose_name='事件数据')),
                ('current_times', models.IntegerField(default=0, verbose_name='最大执行次数')),
                ('max_times', models.IntegerField(default=3, verbose_name='最大执行次数')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='事件备注')),
                ('err_record', models.TextField(blank=True, null=True, verbose_name='报错记录')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '接口测试报告',
                'verbose_name_plural': '接口测试报告',
                'db_table': 'tb_event',
            },
        ),
        migrations.CreateModel(
            name='EventApiRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('result_id', models.IntegerField(verbose_name='所属报告id')),
                ('case_id', models.IntegerField(blank=True, null=True, verbose_name='所属用例id')),
                ('data_id', models.IntegerField(blank=True, null=True, verbose_name='所属数据id')),
                ('api_name', models.CharField(max_length=32, null=True, verbose_name='接口名称')),
                ('url', models.CharField(max_length=128, null=True, verbose_name='请求地址')),
                ('headers', models.TextField(default='{}', verbose_name='请求头')),
                ('params', models.TextField(default='{}', verbose_name='请求行入参')),
                ('body', models.TextField(default='{}', verbose_name='请求体入参')),
                ('response', models.TextField(blank=True, null=True, verbose_name='响应参数')),
                ('err_record', models.TextField(blank=True, null=True, verbose_name='报错记录')),
                ('fail_times', models.IntegerField(null=True, verbose_name='请求失败次数')),
                ('is_mock', models.BooleanField(default=False, verbose_name='是否mock')),
                ('sort', models.IntegerField(default=0, verbose_name='用例排序顺序')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '接口测试报告细节',
                'verbose_name_plural': '接口测试报告细节',
                'db_table': 'tb_event_api_record',
            },
        ),
        migrations.CreateModel(
            name='EventApiResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('host', models.CharField(max_length=64, null=True, verbose_name='执行的域名')),
                ('total', models.IntegerField(blank=True, null=True, verbose_name='用例执行总数')),
                ('current_status', models.CharField(choices=[('等待', '等待'), ('运行', '运行'), ('完成', '完成'), ('失败', '失败')], max_length=8, verbose_name='接口测试结果')),
                ('time_taken', models.CharField(blank=True, max_length=16, null=True, verbose_name='执行使用时间')),
                ('is_prepared', models.BooleanField(default=False, verbose_name='套件准备：0未准备 1已准备')),
                ('err_record', models.TextField(blank=True, null=True, verbose_name='报错记录')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '接口测试结果',
                'verbose_name_plural': '接口测试结果',
                'db_table': 'tb_event_api_result',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('project_id', models.IntegerField(verbose_name='所属项目id')),
                ('nickname', models.CharField(max_length=32, verbose_name='域名昵称')),
                ('host', models.CharField(max_length=64, verbose_name='Host域名')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='描述')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '环境',
                'verbose_name_plural': '环境',
                'db_table': 'tb_host',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=64, verbose_name='项目名')),
                ('text', models.CharField(max_length=64, verbose_name='描述')),
                ('project_leader', models.CharField(max_length=64, verbose_name='负责人')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
                'db_table': 'tb_project',
            },
        ),
        migrations.CreateModel(
            name='QaCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_id', models.IntegerField(verbose_name='所属计划id')),
                ('case_name', models.CharField(max_length=32, verbose_name='用例名称')),
                ('sort', models.IntegerField(default=0, verbose_name='排序')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='描述')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '测试用例',
                'verbose_name_plural': '测试用例',
                'db_table': 'tb_qa_case',
            },
        ),
        migrations.CreateModel(
            name='QaPlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('project_id', models.IntegerField(blank=True, null=True, verbose_name='所属项目id')),
                ('plan_name', models.CharField(max_length=32, verbose_name='测试计划')),
                ('text', models.CharField(blank=True, max_length=64, null=True, verbose_name='描述')),
                ('is_status', models.BooleanField(default=True, verbose_name='启用状态：0未启用 1启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除：1删除 0未删除）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '测试计划',
                'verbose_name_plural': '测试计划',
                'db_table': 'tb_qa_plan',
            },
        ),
    ]
